---
import Navigation from "@/components/Navigation.astro";

import "../styles/globals.css";

interface Props {
  readonly title: string;
  readonly description: string;
  readonly ogImageURL?: string;
}

const { title, description, ogImageURL = "/default-og.png" } = Astro.props;

const siteURL = Astro.site || 'http://localhost:4321';
const canonicalURL = new URL(Astro.url.pathname, siteURL);
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <link rel="canonical" href={canonicalURL} />

    <meta property="og:title" content={title} />
    <meta property="og:image" content={ogImageURL} />
    <meta property="og:type" content="article" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:description" content={description} />
    <meta property="og:locale" content="es_CO" />
  <body class="mx-24">
    <Navigation />
    <slot />
  </body>
</html>
